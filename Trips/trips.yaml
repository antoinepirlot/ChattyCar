openapi: 3.0.3
info:
  title: Chatty Car Ride Sharing Service Trips API
  description: API for the gateway service of Chatty Car, the ride sharing app.
  version: 1.0.0
servers:
  - url: 'http://localhost:9005'
    description: dev server

paths:
  /trips:
    post:
      summary: Create a trip
      requestBody:
        description: Information of the trip
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/newTrip'
        400:
          description: Trip in request is not correct
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        201:
          description: Trip is created, sent trip created with its assigned ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/trip'
    get:
        summary: Get list of trips with optional search queries
        description:
          Limits list to 20 trips, ordered by latest created if not otherwise specified.
          Always filters out trips without any available seating left.
          Departure date query will filter only trips departing on the same date.
          Origin query (lat+lon) will order by distance with specified origin position.
          Destination query (lat+lon) will order by distance with specified destination position.
          Both origin and destination queries will order by sum of distances.
        parameters:
          - name: departure_date
            in: query
            required: false
            schema:
              type: string
              example: 2022-10-24
            description: Date of departure
          - name: originLat
            in: query
            required: false
            schema:
              type: number
              example: 50.849372
            description: Latitude of the origin position
          - name: originLon
            in: query
            required: false
            schema:
              type: number
              example: 4.451009
            description: Longitude of the starting position
          - name: destinationLat
            in: query
            required: false
            schema:
              type: number
              example: 50.849372
            description: Latitude of the destination position
          - name: destinationLon
            in: query
            required: false
            schema:
              type: number
              example: 4.451009
            description: Longitude of the destination position
        responses:
          400:
            description: Both latitude and longitude should be specified for a position query
          200:
            description: Sent list of trips
            content:
              'application/json':
                schema:
                  type: array
                  maxItems: 10
                  items:
                    $ref: '#/components/schemas/trip'
  /trips/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 38
        description: ID of the trip
    get:
      summary: Get trip information
      responses:
        404:
          description: No trip found with this ID
        200:
          description: Sent trip information
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/trip'
    delete:
      summary: Delete trip
      responses:
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: No trip found with this ID
        200:
          description: Trip is deleted
  /trips/{id}/passengers:
    get:
      summary: Get list of passengers of a trip, with pending, accepted and refused status
      security:
        - authentication:
            - driver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 38
          description: ID of the trip
      responses:
        400:
          description: Status not in accepted values
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: No trip found with this ID
        200:
          description: Sent list of passengers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/passengers'

  /trips/{trip_id}/passengers/{user_id}:
    parameters:
      - name: trip_id
        in: path
        required: true
        schema:
          type: integer
          example: 38
        description: ID of the trip
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          example: 12
        description: ID of the user
    post:
      summary: Add user as passenger to a trip with pending status
      security:
        - authentication:
            - passenger
      responses:
        400:
          description: User is already a passenger, or the ride has no available seating left
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        201:
          description: User added as pending passenger
    get:
      summary: Get passenger status
      security:
        - authentication:
            - driver
            - passenger
      responses:
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        200:
          description: Sent passenger status
          content:
            'text/plain':
              schema:
                type: string
                enum:
                  - pending
                  - accepted
                  - refused
    put:
      summary: Update passenger status
      security:
        - authentication:
            - driver
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - accepted
              - refused
          description: New status of the passenger
      responses:
        400:
          description: User is not a passenger, or is not in pending status, or status not in accepted 				value
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        200:
          description: Status is updated
    delete:
      summary: Remove user from passengers of a trip
      security:
        - authentication:
            - passenger
      responses:
        400:
          description: User is not a passenger
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        200:
          description: Used removed from passenger

components:
  schemas:
    position:
        type: object
        properties:
          latitude:
            type: number
          longitude:
            type: number
        example:
          latitude: 50.849372
          longitude: 4.451009
    trip:
          type: object
          properties:
            id:
              type: integer
            origin:
              $ref: '#/components/schemas/position'
            destination:
              $ref: '#/components/schemas/position'
            departure:
              type: localDate
              description: Date in ISO 8601, YYYY-MM-DD
            driver_id:
              type: integer
            available_seating:
              type: integer
          example:
            id: 38
            origin:
              latitude: 50.849372
              longitude: 4.451009
            destination:
              latitude: 50.849372
              longitude: 4.451009
            departure: 2022-10-24 10:45:00
            driver_id: 12
            available_seating: 2
    newTrip:
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/position'
        destination:
          $ref: '#/components/schemas/position'
        departure_date:
          type: localDate
          description: Date in ISO 8601, YYYY-MM-DD
        driver_id:
          type: integer
        available_seating:
          type: integer
      example:
        origin:
          latitude: 50.849372
          longitude: 4.451009
        destination:
          latitude: 50.849372
          longitude: 4.451009
        departure: 2022-10-24
        driver_id: 12
        available_seating: 2
